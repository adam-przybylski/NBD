version: '3.8'
services:
  mongo_1:
      build:
        context: .
        dockerfile: Dockerfile
      image: mongo:6-jammy
      container_name: mongodb1
      hostname: mongodb1
      networks:
        - mongonet
      ports:
        - "27017:27017"
      environment:
         - MONGO_INITDB_ROOT_USERNAME=admin
         - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      command: --config /etc/mongod.conf --port 27017 --replSet replica_set_single
      healthcheck:
        test: [ "CMD", "mongosh", "--port", "27017","--eval", "db.adminCommand('ping')" ]
        interval: 10s
        timeout: 2s
        retries: 5

  mongo_2:
        build:
          context: .
          dockerfile: Dockerfile
        image: mongo:6-jammy
        container_name: mongodb2
        hostname: mongodb2
        networks:
            - mongonet
        ports:
            - "27018:27018"
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=adminpassword
        command: --config /etc/mongod.conf --port 27018 --replSet replica_set_single
        healthcheck:
            test: [ "CMD", "mongosh", "--port", "27018","--eval", "db.adminCommand('ping')" ]
            interval: 10s
            timeout: 2s
            retries: 5

  mongo_3:
        build:
          context: .
          dockerfile: Dockerfile
        image: mongo:6-jammy
        container_name: mongodb3
        hostname: mongodb3
        networks:
            - mongonet
        ports:
            - "27019:27019"
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=adminpassword
        command: --config /etc/mongod.conf --port 27019 --replSet replica_set_single
        healthcheck:
            test: [ "CMD", "mongosh", "--port", "27019","--eval", "db.adminCommand('ping')" ]
            interval: 10s
            timeout: 2s
            retries: 5

  mongoinit:
    build:
      context: .
      dockerfile: Dockerfile
    image: mongo:6-jammy
    hostname: mongodbinit
    container_name: mongodbinit
    networks:
      - mongonet
    depends_on:
      mongo_1:
        condition: service_healthy
      mongo_2:
        condition: service_healthy
      mongo_3:
        condition: service_healthy
    command: mongosh --host mongodb1 --port 27017 --username admin --password adminpassword --file /scripts/initReplicaSet.js

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis
    hostname: redis
    volumes:
      - redis-stack-data:/bitnami/redis/data
    networks:
      - redisnet
    ports:
      - "8001:8001"
      - "6379:6379"

volumes:
  redis-stack-data:
    driver: local

networks:
  mongonet:
    driver: bridge
  redisnet: {}

